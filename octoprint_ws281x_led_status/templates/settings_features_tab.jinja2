<h5>Plugin features <a href="https://github.com/cp2004/OctoPrint-WS281x_LED_Status/wiki/Features" target="_blank"><i class="fa fa-lg fa-info-circle text-info" aria-hidden="true"></i></a></h5></h5>
<form class="form-horizontal">
    <label class="checkbox inline">
        <input type="checkbox" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.active_times.enabled">Enable active times
    </label>
    <div class="form-inline" data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.active_times.enabled">
        <label class="inline"> Start time </label>
        <input type="time" class="input-small" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.active_times.start">
        <label class="inline"> End time </label>
        <input type="time" class="input-small" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.active_times.stop">
    </div>
    <p class="help-block">The LED strip will turn on at the start time, off at the end time. Potentially useful if you don't want them on overnight.</p>
    <p data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.active_times.enabled" class="help-block">Note this currently doesn't support the start time being later than end time(eg. 19:00 to 13:00), your LEDs will always be off.</p>
    <div class="alert alert-block" data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.active_times.enabled">
        <h4>Heads up!</h4>
        <p>The plugin uses your system time, so this depends on a correct timezone which may not have been changed from the default.
        <br>
        <strong>Current timezone: {{ plugin_ws281x_led_status_timezone }}</strong>
        <br>
        If you want to change this, please run <code>sudo raspi-config</code> then change your location.
        </p>
    </div>
    <hr>
    <label class="checkbox inline">
        <input type="checkbox" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.enabled">Enable torch effect and button
    </label>
    <div class="form-inline" data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.enabled">
        <label class="inline">Effect </label>
        <select class="input-large" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.effect">
            {% for effect in plugin_ws281x_led_status_standard_names %}
                <option value="{{ effect }}">{{ effect }}</option>
            {% endfor %}
        </select>
        <label class="inline"> Colour </label>
        <input type="color" class="input-small" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.color">
        <label class="inline"> Delay </label>
        <div class="input-append">
            <input type="number" step="0.1" class="input-small" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.delay">
            <span class="add-on">ms</span>
        </div>
    </div>
    <div class="form-inline" style="margin-top: 0.5rem;" data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.enabled">
        <label class="inline">Torch lasts for</label>
        <div class="input-append">
            <input class="input-medium" type="number" data-bind="value: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.timer, enable: !settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.toggle()">
            <span class="add-on">secs</span>
        </div>
    </div>
    <div class="form-inline" style="margin-top: 0.5rem;" data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.enabled">
        <label class="checkbox inline">
            <input type="checkbox" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.toggle">Torch mode is a toggle
        </label>
        <p class="help-block">
            This overrides the timer, so you have to manually turn torch mode off again.
        </p>
    </div>
    <hr>
    <label class="checkbox inline">
        <input type="checkbox" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.intercept_m150">Enable intercepting M150 commands
    </label>
    <p class="help-block"><i class="fa fa-info-circle text-info"></i> For details on the M150 command, and how you can use it, <a href="https://github.com/cp2004/OctoPrint-WS281x_LED_Status/wiki/Features#m150-intercept">see the plugin's documentation.</a></p>
    <hr>
    <label class="checkbox inline">
        <input type="checkbox" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.at_command_reaction">Enable reacting to @ Commands
    </label>
    <div class="well">
        <p>Available commands:<br>
        <ul>
            <li><code>@WS_LIGHTSON</code>: Turn the lights on</li>
            <li><code>@WS_LIGHTSOFF</code>: Turn the lights off</li>
            <li><code>@WS_TORCH</code>: Activate the torch effect</li>
            <li data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.toggle"><code>@WS_TORCH_ON</code>: Turn on the torch effect</li>
            <li data-bind="visible: settingsViewModel.settings.plugins.ws281x_led_status.effects.torch.toggle"><code>@WS_TORCH_OFF</code>: Turn off the torch effect</li>
        </ul>
        You may want to add one to a gcode script, either in slicer or OctoPrint for example to turn the LEDs on at the start of a print
    </div>
    <hr>
    <label class="checkbox inline">
        <input type="checkbox" class="inline" data-bind="checked: settingsViewModel.settings.plugins.ws281x_led_status.debug_logging"> Enable debug logging
    </label>
    <p class="help-block">This is very helpful in debugging issues with running effects, if you have a bug to report please enable & upload this.</p>
</form>
